<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
  <conversionRule conversionWord="clr" class="org.springframework.boot.logging.logback.ColorConverter"/>
  <conversionRule conversionWord="esb"
    class="org.springframework.boot.logging.logback.EnclosedInSquareBracketsConverter"/>
  <conversionRule conversionWord="wex"
    class="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
  <conversionRule conversionWord="wEx"
    class="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>

  <property name="CONSOLE_LOG_PATTERN"
    value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}){} %clr(${PID:-}){magenta} %clr(--- %esb(){APPLICATION_NAME}%esb{APPLICATION_GROUP}[%15.15t] ${LOG_CORRELATION_PATTERN:-}){faint}%clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
  <property name="FILE_LOG_PATTERN"
    value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd'T'HH:mm:ss.SSSXXX}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:-} --- %esb(){APPLICATION_NAME}%esb{APPLICATION_GROUP}[%t] ${LOG_CORRELATION_PATTERN:-}%-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>

  <springProperty name="LOG_PATH" source="log.config.path"/>
  <springProperty name="LOG_FILE_NAME" source="log.config.filename"/>
  <springProperty name="LOG_MAX_HISTORY" source="log.config.maxHistory"/>
  <springProperty name="LOG_TOTAL_SIZE_CAP" source="log.config.totalSizeCap"/>

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- PatternLayout Encoder -->
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>${CONSOLE_LOG_PATTERN}</pattern>
    </encoder>
  </appender>

  <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <file>${LOG_PATH}/${LOG_FILE_NAME}</file>
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
      <maxHistory>${LOG_MAX_HISTORY}</maxHistory>
      <totalSizeCap>${LOG_TOTAL_SIZE_CAP}</totalSizeCap>
    </rollingPolicy>

    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
      <pattern>${FILE_LOG_PATTERN}</pattern>
    </encoder>
  </appender>

  <!-- 로깅 비동기 처리 설정 -->
  <appender name="ASYNC_STDOUT" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="STDOUT"/>
    <queueSize>512</queueSize> <!-- 기본: 256 -->
    <discardingThreshold>0</discardingThreshold> <!-- 로그가 많아도 버리지 않음 -->
    <includeCallerData>false</includeCallerData>
    <neverBlock>false</neverBlock>
  </appender>

  <!-- Async File Appender -->
  <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="FILE"/>
    <queueSize>1024</queueSize>
    <discardingThreshold>0</discardingThreshold>
    <includeCallerData>false</includeCallerData>
    <neverBlock>false</neverBlock>
  </appender>

  <!-- local 환경 -->
  <springProfile name="local">
    <root level="DEBUG">
      <appender-ref ref="ASYNC_STDOUT"/>
      <appender-ref ref="ASYNC_FILE"/>
    </root>
  </springProfile>

  <!-- dev 환경 -->
  <springProfile name="dev">
    <root level="INFO">
      <appender-ref ref="ASYNC_STDOUT"/>
      <appender-ref ref="ASYNC_FILE"/>
    </root>
  </springProfile>

  <!-- prod 환경 -->
  <springProfile name="prod">
    <root level="INFO">
      <appender-ref ref="ASYNC_STDOUT"/>
      <appender-ref ref="ASYNC_FILE"/>
    </root>
  </springProfile>

</configuration>
